//
// **** AUTOMATICALLY GENERATED BY mknodedecls.pl -- DO NOT EDIT ****
//
#ifdef __NODE_DECLARATIONS_ONLY__

//---------------------------------------------------------------------------
//     THESE ARE PREDEFINED NODES, AVAILABLE FROM THE CDK
//---------------------------------------------------------------------------

namespace cdk {
  namespace node {
    class Node;  class Nil;  class Data;  class Composite;  class Sequence;
    namespace expression {
      template <class T> class Simple;
      class Double;  class Integer;  class String;  class Identifier;
      class UnaryExpression;
      class NEG;
      class BinaryExpression;
      class ADD;  class SUB;  class MUL;  class DIV;  class MOD;
      class LT;   class LE;   class GE;   class GT;   class EQ;   class NE;
    }
  } // namespace node
} // namespace cdk

//---------------------------------------------------------------------------
//     THESE ARE THE NODES DEFINED SPECIFICALLY FOR THIS APPLICATION
//---------------------------------------------------------------------------

namespace pipoca {
namespace node { class BlockNode; } 
namespace node { class BreakNode; } 
namespace node { class ContinueNode; } 
namespace node { class DoElseNode; } 
namespace node { class FunctionDeclNode; } 
namespace node { class FunctionDefNode; } 
namespace node { class IfElseNode; } 
namespace node { class InstructionNode; } 
namespace node { class ProgramNode; } 
namespace node { class ReturnNode; } 
namespace node { class VarConstNode; } 
namespace node { class VarExtNode; } 
namespace node { class VarInitNode; } 
namespace node { class VarNode; } 
namespace node { class WhileElseNode; } 
namespace node { namespace expression { class AND; } } 
namespace node { namespace expression { class Address; } } 
namespace node { namespace expression { class Argument; } } 
namespace node { namespace expression { class Attribution; } } 
namespace node { namespace expression { class AttributionIndex; } } 
namespace node { namespace expression { class Brackets; } } 
namespace node { namespace expression { class Condition; } } 
namespace node { namespace expression { class DEC; } } 
namespace node { namespace expression { class FunctionCall; } } 
namespace node { namespace expression { class INC; } } 
namespace node { namespace expression { class Index; } } 
namespace node { namespace expression { class NOT; } } 
namespace node { namespace expression { class OR; } } 
namespace node { namespace expression { class POW; } } 
namespace node { namespace expression { class Print; } } 
namespace node { namespace expression { class Read; } } 
namespace node { namespace expression { class Vector; } } 
namespace node { class MemoryAllocationNode; } 
} // namespace pipoca

//---------------------------------------------------------------------------
//     A L I A S E S
//---------------------------------------------------------------------------

// make sure the "semantics" namespace is known
namespace pipoca { namespace semantics {} }

#else /* !defined(__NODE_DECLARATIONS_ONLY__) */

#ifndef __AUTOMATIC_NODE_ALLNODES_H__
#define __AUTOMATIC_NODE_ALLNODES_H__

//---------------------------------------------------------------------------
//     THESE ARE PREDEFINED NODES, AVAILABLE FROM THE CDK
//---------------------------------------------------------------------------

#include <cdk/nodes/Node.h>
#include <cdk/nodes/Data.h>
#include <cdk/nodes/Nil.h>
#include <cdk/nodes/Composite.h>
#include <cdk/nodes/Sequence.h>

#include <cdk/nodes/expressions/Integer.h>
#include <cdk/nodes/expressions/Double.h>
#include <cdk/nodes/expressions/String.h>
#include <cdk/nodes/expressions/Identifier.h>
#include <cdk/nodes/expressions/NEG.h>
#include <cdk/nodes/expressions/ADD.h>
#include <cdk/nodes/expressions/SUB.h>
#include <cdk/nodes/expressions/MUL.h>
#include <cdk/nodes/expressions/DIV.h>
#include <cdk/nodes/expressions/MOD.h>
#include <cdk/nodes/expressions/LT.h>
#include <cdk/nodes/expressions/GT.h>
#include <cdk/nodes/expressions/GE.h>
#include <cdk/nodes/expressions/LE.h>
#include <cdk/nodes/expressions/NE.h>
#include <cdk/nodes/expressions/EQ.h>

//---------------------------------------------------------------------------
//     THESE ARE THE NODES DEFINED SPECIFICALLY FOR THIS APPLICATION
//---------------------------------------------------------------------------

#include "nodes/BlockNode.h"
#include "nodes/BreakNode.h"
#include "nodes/ContinueNode.h"
#include "nodes/DoElseNode.h"
#include "nodes/FunctionDeclNode.h"
#include "nodes/FunctionDefNode.h"
#include "nodes/IfElseNode.h"
#include "nodes/InstructionNode.h"
#include "nodes/ProgramNode.h"
#include "nodes/ReturnNode.h"
#include "nodes/VarConstNode.h"
#include "nodes/VarExtNode.h"
#include "nodes/VarInitNode.h"
#include "nodes/VarNode.h"
#include "nodes/WhileElseNode.h"
#include "nodes/expression/AND.h"
#include "nodes/expression/Address.h"
#include "nodes/expression/Argument.h"
#include "nodes/expression/Attribution.h"
#include "nodes/expression/AttributionIndex.h"
#include "nodes/expression/Brackets.h"
#include "nodes/expression/Condition.h"
#include "nodes/expression/DEC.h"
#include "nodes/expression/FunctionCall.h"
#include "nodes/expression/INC.h"
#include "nodes/expression/Index.h"
#include "nodes/expression/NOT.h"
#include "nodes/expression/OR.h"
#include "nodes/expression/POW.h"
#include "nodes/expression/Print.h"
#include "nodes/expression/Read.h"
#include "nodes/expression/Vector.h"
#include "nodes/MemoryAllocationNode.h"


//---------------------------------------------------------------------------
//     A L I A S E S
//---------------------------------------------------------------------------

// make sure the "semantics" namespace is known
namespace pipoca { namespace semantics {} }

//---------------------------------------------------------------------------
//     T H E    E N D
//---------------------------------------------------------------------------

#endif /* !defined(__AUTOMATIC_NODE_ALLNODES_H__) */

#endif /* !defined(__NODE_DECLARATIONS_ONLY__) */
